import os  #, sys  #–î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç sys
# mysecret = os.getenv('MySecret')
# print(mysecret)

for i in ['key1', 'key2', 'key3']:
  print('key: ', os.getenv(i)) #–î–æ–±–∞–≤–ª–µ–Ω–æ —Å–ª–æ–≤–æ key

# from sympy import *  #–ß—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ (–û—Ç–≤–µ—Ç: —ç—Ç–æ –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤/–∫–ª–∞—Å—Å–æ–≤ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ sympy) 5/5
# k, T, C, L = symbols('k T C L')
# #1
# C_ost = 1000000
# Am_lst = []
# C_ost_lst = []
# for i in range(5):
#   Am = (C-L)/T
#   C_ost -= Am.subs({C:1000000, T:5, L:0})
#   Am_lst.append(round(Am.subs({C:1000000, T:5, L:0}),2))
#   C_ost_lst.append(round(C_ost,2))
# print('Am_lst', Am_lst)
# print('C_ost_lst', C_ost_lst)
# # # –∏–∑ –±–ª–æ–∫–∞ –≤—ã—à–µ —É–±—Ä–∞–Ω–∞ –≤—Ç–æ—Ä–∞—è —Ä–µ—à–µ—Ç–∫–∞

# # #2
# # Aj = 0
# # C_ost = 1000000
# # Am_lst2 = []
# # C_ost_lst2 = []
# # for i in range(5):
# #   Am = k/T *(C-Aj) #–ß—Ç–æ —Ç–∞–∫–æ–µ k
# #   C_ost -= Am.subs({C:1000000, T:5, L:0, k:2})
# #   Am_lst2.append(round(Am.subs({C:1000000, T:5, L:0, k:2}),2))
# #   Aj += Am
# #   C_ost_lst2.append(round(C_ost,2))
# # print('Am_lst2', Am_lst2)
# # print('C_ost_lst2', C_ost_lst2)

# # #tableview container
# # import pandas as pd
# # Y= range(1,6)
# # table1 = list(zip(Y, C_ost_lst, Am_lst))
# # table2 = list(zip(Y, C_ost_lst2, Am_lst2))
# # tFrame = pd.DataFrame(table1, columns=['Y', 'C_ost', 'Am'])
# # tFrame2 = pd.DataFrame(table2, columns=['Y', 'C_ost2', 'Am2'])
# # print(tFrame)
# # print(tFrame2)

#Variant2

from sympy import *
k, T, C, L = symbols('k T C L') 
#1
C_ost = 100000
Am_lst = []
C_ost_lst = []
for i in range(9):
  Am = (C-L)/T
  C_ost -= Am.subs({C:100000, T:9, L:0})
  Am_lst.append(round(Am.subs({C:100000, T:9, L:0}),2))
  C_ost_lst.append(round(C_ost,2)) #–ü–æ—á–µ–º—É –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ 2 –∑–Ω–∞–∫–æ–≤ (–û—Ç–≤–µ—Ç: —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã—Ö —á–∏—Å–µ–ª) 3/5 (–¶–µ–Ω–∞ –≤ —Ä—É–±–ª—è—Ö, –º–µ–Ω–µ–µ 1 –∫–æ–ø–µ–π–∫–∏ –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞))
print('Am_lst', Am_lst) 
print('C_ost_lst', C_ost_lst)

#2
Aj = 0
C_ost = 100000
Am_lst2 = []
C_ost_lst2 = []
for i in range(9):
  Am = k/T *(C-Aj)
  C_ost -= Am.subs({C:100000, T:9, L:0, k:2})
  Am_lst2.append(round(Am.subs({C:100000, T:9, L:0, k:2}),2))
  Aj += Am
  C_ost_lst2.append(round(C_ost,2))
print('Am_lst2', Am_lst2)
print('C_ost_lst2', C_ost_lst2)

#tableview container
import pandas as pd
Y= range(1,10)
table1 = list(zip(Y, C_ost_lst, Am_lst))
table2 = list(zip(Y, C_ost_lst2, Am_lst2))
tFrame = pd.DataFrame(table1, columns=['Y', 'C_ost', 'Am']) #–ü–æ—á–µ–º—É 3 –ø–æ–¥–ø–∏—Å–∏ (–û—Ç–≤–µ—Ç: –ø–æ—Ç–æ–º—É —á—Ç–æ 3 —Å—Ç–æ–ª–±—Ü–∞) 5/5 
tFrame2 = pd.DataFrame(table2, columns=['Y', 'C_ost2', 'Am2'])
print(tFrame)
print(tFrame2)

#visual conainer

from matplotlib import pyplot as plt
fig, ax = plt.subplots(3) #–ü–æ—á–µ–º—É subplots(3) –∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ ax: [0], [1], [2] ü§° (–û—Ç–≤–µ—Ç: –ø–æ—Ç–æ–º—É —á—Ç–æ 3 –≥—Ä–∞—Ñ–∏–∫–∞) 4/5 (–¥–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ 3 –≥—Ä–∞—Ñ–∏–∫–∞, –Ω–æ –≤ python –∏–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0)

ax[0].plot(Y, tFrame2['C_ost2'], label='Am2')
ax[0].plot(Y, tFrame['C_ost'], label='Am')
ax[1].bar(Y, tFrame['Am'], label='Am')
ax[1].bar(Y, tFrame2['Am2'], label='Am2')

vals1 = Am_lst
vals2 = Am_lst2
labels = list(range(1,10))
explode = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
ax[2].pie(vals2, labels=labels, autopct= '%1.1f%%', explode=explode)
ax[2].axis('equal')

plt.show()
